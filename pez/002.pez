#! /usr/bin/env pez
# Find the sum of all the even-valued terms in the Fibonacci sequence which do
# not exceed four million.

variable sum

: sum-even-fibs ( limit -- sum )
	0 sum !
	1 2 ( lim a b )
	begin
		dup 3 pick <=
	while
		dup sum +!
		2dup + ( a b a+b )
		2dup + ( a b a+b a+2b )
		2nip   ( a+b a+2b )
		swap   ( a+2b a+b )
		over + ( a+2b 2a+3b )
	repeat
	drop 2drop sum @ ;

# This algorithm is based on the equation F(n) = 4 * F(n - 3) + F(n - 6)
# Since only every third Fibonacci number is even, we only need to find 1/3 of
# the numbers from the beginning to the limit.
: sum-even-fibs-faster ( limit -- sum )
	2 sum !
	2 8 ( lim a b )
	begin
		dup 3 pick <=
	while
		dup sum +!
		swap over ( b a b )
		4 * + ( b a+4b )
	repeat drop 2drop sum @ ;

: which-limit 
	argc 0= if 4000000 exit then
	argv @ strint dup
	0= if drop 4000000 exit then
	nip ;

which-limit sum-even-fibs        . cr
which-limit sum-even-fibs-faster . cr
