#! /usr/bin/env pez

# What is the sum of the numbers on the diagonals in a 1001 by 1001 spiral?

"bench" load-lib

# So first, a square with a center (formed by doing a spiral) is the square of
# an odd number.  Specifically (and this is almost too obvious to write), the
# last corner of an NxN square is going to be...N^2.  Its sides are going to be
# N cells long, so the other three corners are N^2-(N-1), N^2-2(N-1), and
# N^2-3(N-1).  The diagonals are going to be corners of the (N-M)^2 squares,
# down to the 1x1 square, whose diagonals sum to 1.

# So...this one's easy.

: default-number ( n -- n|argv[0] )
	argc 0= if exit then
	argv @ atoi dup
	0= if drop exit then
	nip ;

: sum-corners ( n -- sum )   dup dup * 2 shift swap 1- 6 * - ;
: sum-diagonals ( n -- sum )   1 swap 1+ 3 do i sum-corners + 2 +loop ;

# Of course, after seeing the solutions in the thread on this problem, there is
# an O(1) solution:  S=4k(4k^2-1)/3-6k^2+6k-3.
: sum-diagonals-O(1)  ( n -- sum )
	1+ 2/
	dup 4 * over dup * 4 * 1- * 3 / swap
	dup 6 * swap
	dup * 6 * - + 3 - ;

# On my machine, there's no perceptible difference until you try for a
# 10000001x10000001 spiral, where the timing is:
#	2584130013166141825 (0.612742 seconds.)
#	2584130013166141825 (0.000004 seconds.)
1001 default-number bench: sum-diagonals . ;bench
1001 default-number bench: sum-diagonals-O(1) . ;bench
