#! /usr/bin/env pez

# Evaluate the sum of all the amicable numbers under 10000.

"bench" load-lib

variable sigma-n
: sigma ( n|8<n -- sigma[n] )
	dup sigma-n !
	1 ( n sum )
	swap float sqrt floor 2 do
		sigma-n @ i /mod swap 0= if + i + else drop then
	loop ;

: default-number
	argc 0= if exit then
	argv @ atoi dup
	0= if drop exit then
	nip ;
10000 default-number constant upper-limit
upper-limit cells malloc constant sigmas

: st@ ( n -- sigma[n]|0 )
	cells sigmas + @ ;
: st! ( sigma[n] n -- )
	cells sigmas + ! ;

 1 1 st!
 3 2 st!
 4 3 st!
 7 4 st!
 6 5 st!
12 6 st!
 8 7 st!
15 8 st!

# Memoized version of the above.
: m-sigma ( n -- sigma[n] )
	dup st@ dup if nip exit then drop
	dup sigma dup rot st! ;

variable amicable-sum
: sum-amicable ( limit -- )
	0 amicable-sum !
	1 do
		i m-sigma dup ( sigma[i] sigma[i] )
		i < if # i.e., we've calulated sigma[sigma[n]]
			dup m-sigma i = if # They're amicable!
				i + amicable-sum +!
			else drop then
		else drop then
	loop ;

upper-limit bench: sum-amicable amicable-sum @ . ;bench
